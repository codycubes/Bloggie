
//Write package.json
var _package = require('./package');
var register_helper = require("register-js");
var start_helper = require("./spec/NodeHelper");

module.exports = function(grunt) {

    grunt.initConfig({
        pkg: _package,
        uglify: {
            options: {
                banner: '/*! error.js runtime Built <%= grunt.template.today("dd-mm-yyyy") %> \n' +
                    ' * License: MIT \n' +
                    ' * Homepage: https://github.com/kcauchy/error.js \n' +
                    ' */\n'
            },
            dist: {
                files: {
                    'dist/error-js.min.js': ['error.js']
                }
            }
        },
        jasmine: {
            errorJS:{
                src: ['error.js'],
                options: {
                    specs: 'spec/*Spec.js',
                    helpers: ['node_modules/register-js/register.js', "test/*.js"],
                    outfile: '_SpecRunner.html'
                }
            }
        },
        jshint: {
            files: ['Gruntfile.js', 'error.js', 'spec/*.js'],
            options: {
                // options here to override JSHint defaults
                globals: {
                    jQuery: true,
                    console: true,
                    module: true,
                    document: true
                }
            }
        },
        jasmine_node:{
            specNameMatcher: "spec", // load only specs containing specNameMatcher
            projectRoot: ".",
            match: '.',
            matchall: false,
            extensions: 'js',
            requirejs: false,
            forceExit: true,
            jUnit: {
                report: false,
                savePath : "./build/reports/jasmine/",
                useDotNotation: true,
                consolidate: true
            }
        },
        jsdoc : {
            dist : {
                src: ['error.js'],
                options: {
                    destination: 'doc'
                }
            }
        },
        watch: {
            scripts: {
                files: ['error.js'],
                tasks: ['jsdoc'],
                options: {
                    spawn: false
                }
            }
        }
    });

    grunt.loadNpmTasks('grunt-contrib-uglify');
    grunt.loadNpmTasks('grunt-contrib-jshint');
    grunt.loadNpmTasks('grunt-jasmine-node');
    grunt.loadNpmTasks('grunt-contrib-jasmine');
    grunt.loadNpmTasks('grunt-jsdoc');
    grunt.loadNpmTasks('grunt-contrib-watch');

    grunt.registerTask('jasmine-node', 'jasmine_node');

    grunt.registerTask('test', ['jshint', 'jasmine-node', 'jasmine',  "result"]);

    grunt.registerTask('default', ['jshint', 'test', 'jsdoc', 'uglify', "result"]);

    grunt.registerTask("result", function (){
        console.log("Please open ServerJS.html for server based test.");
    });
};